// Very crude grammar for a subset of Twig templating syntax

@top Template { (directive | Text)* }

directive {
  Insert |
  Escape |
  RawBlock
  // Conditional { ConditionalOpen (directive | Text)* ConditionalClose }
}

Insert { "{{" (space* (Identifier | BIHelper | Number | Bool | String | Equa | Subexp | "|" | "^" | "~"))*  space* "}}" }

Escape { "{{{" Any "}}}" | "{{{{{" "{"* Any "}"* "}}}}}" }

RawOpen { "{{{{" Any "}}}}" }
RawClose { "{{{{" "/" Any "}}}}" }

// @precedence {Escape RawBlock}
// ConditionalOpen { "{{#" kw<"if"> (Identifier | Number | Bool | String | Equa | space)* "}}" }
// ConditionalClose { "{{/" kw<"if"> "}}" }

@skip {space} {
  RawBlock { RawOpen directive RawClose } 
}



kw<word> { @specialize[@name={word}]<Identifier, word> }
Bool { @specialize<Identifier, "true" | "false"> }
Equa { Identifier "=" (Identifier | Number | Bool | String) }


Subexp { "(" (space* (Identifier | Number | Bool | String | Equa | Subexp | "|"))*  space* ")" }
@tokens {
  identifierChar { @asciiLetter | $[_$\u{a1}-\u{10ffff}] | "../" | "@" }

  word { identifierChar (identifierChar | @digit | "." | "#" | "-" | "_")* }

  Identifier { word }

  BIHelper { ("#"|"/"|"*") Identifier | "else" | "else if" | ">" }
  // Identifier { "."? "./"? @asciiLetter+ ("." @asciiLetter+)?  }
  Text { ![{] Text? | "{" (@eof | ![{] Text?) }
  hex { @digit | $[a-fA-F] }

  Any { (![{|}])+ }

  String { ("'" (![\\'] | "\\" _)* "'"?) | ("\"" (![\\"] | "\\" _)* "\""?) }
  Number {
    (@digit ("_" | @digit)* ("." ("_" | @digit)*)? | "." @digit ("_" | @digit)*)
      (("e" | "E") ("+" | "-")? ("_" | @digit)+)? |
    @digit ("_" | @digit)* "n" |
    "0x" (hex | "_")+ "n"? |
    "0b" $[01_]+ "n"? |
    "0o" $[0-7_]+ "n"?
  }
  
  space { @whitespace+ }
  DirectiveContent { ![}] DirectiveContent? | $[}] (@eof | ![}] DirectiveContent?) }
  @precedence { space BIHelper Identifier DirectiveContent }
  "{{"
  "}}"
  "."
  "~"
}

@external propSource Highlight from "./highlight.js"